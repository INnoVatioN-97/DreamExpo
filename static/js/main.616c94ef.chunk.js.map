{"version":3,"sources":["images/YellowLight.png","logo.svg","images/GreenLight.png","images/RedLight.png","CentralMonitoring.js","images/ZERO5_LOGO.jpg","LCDMonitor.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["colors","green","GreenLight","yellow","YellowLight","red","RedLight","CentralMonitoring","useState","changeLight","setChangeLight","useEffect","alert","carts","name","status","floor","detail","style","height","className","display","flexDirection","margin","backgroundColor","borderRadius","fontWeight","fontSize","justifyContent","map","m","src","alt","width","color","border","onClick","event","setTimeout","LCDMonitor","nowTime","setNowTime","setUvSwitchColor","toggleSW","setToggleSW","text","setText","moment","format","flexGrow","padding","verticalAlign","path","barcodeScanner","size","console","log","str","uvLamp","signalGood","ZERO5_LOGO","AppRouter","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.616c94ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/YellowLight.c1077b97.png\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/GreenLight.a5688d20.png\";","export default __webpack_public_path__ + \"static/media/RedLight.96ccddc7.png\";","import logo from './logo.svg';\r\nimport './CentralMonitoring.css';\r\nimport YellowLight from './images/YellowLight.png';\r\nimport GreenLight from './images/GreenLight.png';\r\nimport RedLight from './images/RedLight.png';\r\nimport React, { useState, useEffect } from 'react';\r\n// import\r\n\r\n//카트 연결상태\r\nconst colors = {\r\n    green: GreenLight,\r\n    yellow: YellowLight,\r\n    red: RedLight,\r\n};\r\n\r\nconst CentralMonitoring = () => {\r\n    const [changeLight, setChangeLight] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (changeLight) {\r\n            alert('cart005 모델이 현재 매장을 벗어났습니다. 최종위치 : 3F-주차장');\r\n        }\r\n    }, [changeLight]);\r\n    // 카트들 목록 map으로 띄워주기 위한 더미데이터\r\n    const carts = [\r\n        {\r\n            name: 'cart001',\r\n            status: colors.green,\r\n            floor: '1F',\r\n            detail: '화장품 매장',\r\n        },\r\n        {\r\n            name: 'cart002',\r\n            status: colors.green,\r\n            floor: '1F',\r\n            detail: '화장품 매장',\r\n        },\r\n        {\r\n            name: 'cart003',\r\n            status: colors.yellow,\r\n            floor: '2F',\r\n            detail: '전자제품 매장',\r\n        },\r\n        {\r\n            name: 'cart004',\r\n            status: colors.green,\r\n            floor: '1F',\r\n            detail: '푸드코트',\r\n        },\r\n        {\r\n            name: 'cart005',\r\n            status: changeLight ? colors.red : colors.green,\r\n            floor: '3F',\r\n            detail: '주차장',\r\n        },\r\n        {\r\n            name: 'cart006',\r\n            status: colors.green,\r\n            floor: '4F',\r\n            detail: '식품매장 인근',\r\n        },\r\n    ];\r\n\r\n    //화면 하단을 누르면 작동되는 히든 버튼\r\n    //5번 카트를 빨간불로 만들어준다.\r\n\r\n    const btnPressed = (event) => {\r\n        // console.log(event);\r\n        !changeLight\r\n            ? setTimeout(() => {\r\n                  setChangeLight(!changeLight);\r\n              }, 2000)\r\n            : setChangeLight(!changeLight);\r\n        // setChangeLight(!changeLight);\r\n    };\r\n\r\n    return (\r\n        <div style={{ height: '2000px' }}>\r\n            <div className=\"container\">\r\n                <h1>SSAC 중앙 모니터링</h1>\r\n\r\n                <div\r\n                    style={{\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        margin: '2%',\r\n                        backgroundColor: '#1e272e',\r\n                        borderRadius: '20px',\r\n                    }}\r\n                >\r\n                    <div style={{ fontWeight: '600', fontSize: '4vw', margin: ' 2% 5%' }}>현재 매장 내 쇼핑카트 현황</div>\r\n                    <div\r\n                        style={{\r\n                            margin: '2% 4%',\r\n                            display: 'flex',\r\n                            flexDirection: 'row',\r\n                            justifyContent: 'space-around',\r\n                            fontWeight: '500',\r\n                            fontSize: '3vw',\r\n                        }}\r\n                    >\r\n                        <span>모델명</span>\r\n                        <span>상태</span>\r\n                        <span>최종 위치</span>\r\n                    </div>\r\n                    {carts.map((m) => {\r\n                        return (\r\n                            <div\r\n                                style={{\r\n                                    margin: '1% 7%',\r\n                                    display: 'flex',\r\n                                    flexDirection: 'row',\r\n                                    justifyContent: 'space-between',\r\n                                    fontWeight: '300',\r\n                                    fontSize: '2.7vw',\r\n                                    // flexWrap: 'nowrap',\r\n                                }}\r\n                            >\r\n                                <span>{m.name}</span>\r\n                                <span>\r\n                                    <img src={m.status} alt=\"stat\" className=\"trafficIcon\" />\r\n                                </span>\r\n                                <span>\r\n                                    {/* <div style={{ display: 'flex', flexDirection: 'column' }}> */}\r\n                                    <span>{m.floor}</span>\r\n                                    {/* <span style={{ fontSize: '2vw' }}>{m.detail}</span> */}\r\n                                    {/* </div> */}\r\n                                </span>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            <button\r\n                style={{\r\n                    backgroundColor: 'transparent',\r\n                    width: '100%',\r\n                    height: '150px',\r\n                    color: 'transparent',\r\n                    // textDecoration: 'none',\r\n                    border: 'none',\r\n                }}\r\n                onClick={btnPressed}\r\n            >\r\n                kk\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CentralMonitoring;\r\n","export default __webpack_public_path__ + \"static/media/ZERO5_LOGO.670483af.jpg\";","import React, { useEffect, useState } from 'react';\r\nimport './LCDMonitor.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/ko';\r\nimport ZERO5_LOGO from './images/ZERO5_LOGO.jpg';\r\nimport { mdiLedOn as uvLamp } from '@mdi/js'; // UV 살균 램프 svg파일\r\nimport { mdiBarcodeScan as barcodeScanner } from '@mdi/js'; // 바코드 스캐너 아이콘\r\nimport { mdiSignalCellular3 as signalGood } from '@mdi/js'; // 통신감도\r\nimport Icon from '@mdi/react';\r\n\r\nconst LCDMonitor = () => {\r\n    const [nowTime, setNowTime] = useState('0000-00-00 00:00:00');\r\n    const [uvSwitchColor, setUvSwitchColor] = useState('#1e272e');\r\n    const [toggleSW, setToggleSW] = useState(false);\r\n    const [text, setText] = useState('OFF');\r\n    //current Time\r\n    useEffect(() => {\r\n        setNowTime(moment().format('YYYY-MM-DD HH:mm:ss'));\r\n    }, []);\r\n\r\n    const switchUV = () => {\r\n        console.log('눌림!');\r\n        const color = toggleSW ? 'teal' : '#1e272e';\r\n        const str = toggleSW ? 'ON' : 'OFF';\r\n        setToggleSW(!toggleSW);\r\n        setUvSwitchColor(color);\r\n        setText(str);\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"topBar\">\r\n                <span>Model S/M : cart003</span>\r\n                <span>{nowTime}</span>\r\n                <span>배터리 상태: 76%</span>\r\n            </div>\r\n            <div className=\"middleScreen\">\r\n                <div className=\"menuScreen\">\r\n                    <div\r\n                        style={{\r\n                            flexGrow: '1',\r\n                            // margin: 'auto',\r\n                            padding: '4%',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            backgroundColor: '#1e272e',\r\n                            justifyContent: 'center',\r\n                            verticalAlign: 'middle',\r\n                            // height: '100%',\r\n                        }}\r\n                    >\r\n                        <p>\r\n                            <Icon path={barcodeScanner} size={'13vw'} color=\"white\" />\r\n                        </p>\r\n                        바코드 스캔하기\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            flexGrow: '2',\r\n                            // margin: 'auto',\r\n                            padding: '4%',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            // backgroundColor: uvSwitchColor,\r\n                            backgroundColor: '#1e272e',\r\n\r\n                            justifyContent: 'center',\r\n                            verticalAlign: 'middle',\r\n                            // height: '100%',\r\n                        }}\r\n                        onClick={switchUV}\r\n                    >\r\n                        {/* <button style={{ border: 'none', color: 'transparent', backgroundColor: uvSwitchColor }} onClick={() => switchUV}> */}\r\n                        <p>\r\n                            <Icon path={uvLamp} size={'13vw'} color={toggleSW ? 'grey' : 'white'} />\r\n                        </p>\r\n                        UV 살균 기능 켜기 {text} 상태\r\n                        {/* </button> */}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            flexGrow: '1',\r\n                            // margin: 'auto',\r\n                            padding: '4%',\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            backgroundColor: '#1e272e',\r\n                            justifyContent: 'center',\r\n                            verticalAlign: 'middle',\r\n                            // height: '100%',\r\n                        }}\r\n                    >\r\n                        <p>\r\n                            <Icon path={signalGood} size={'13vw'} color=\"#44bd32\" />\r\n                        </p>\r\n                        현재 통신 상태\r\n                    </div>\r\n                </div>\r\n                <div className=\"logoScreen\">\r\n                    {/* <span> */}\r\n                    <img src={ZERO5_LOGO} className=\"logoImg\" alt=\"logo\" />\r\n                    {/* </span> */}\r\n                </div>\r\n            </div>\r\n            <div className=\"footerScreen\">\r\n                <span>ver 0.0.1</span>\r\n                <span>Developing Screen</span>\r\n                <span>copyrightⓒ 2021 All rights reserved by Zero5</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LCDMonitor;\r\n","import React from 'react';\r\nimport CentralMonitoring from './CentralMonitoring';\r\nimport LCDMonitor from './LCDMonitor';\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nconst AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <CentralMonitoring />\r\n                </Route>\r\n                <Route exact path=\"/LCD\">\r\n                    <LCDMonitor />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n","import AppRouter from './Router';\nimport React from 'react';\n// import\n\nconst App = () => {\n    return <AppRouter />;\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}